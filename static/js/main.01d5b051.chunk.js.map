{"version":3,"sources":["reducers.js","components/SearchBox.component.jsx","components/Scroll.component.jsx","components/ErrorBoundary.component.jsx","components/Card.component.jsx","components/CardList.component.jsx","components/Header.jsx","containers/App.jsx","actions.js","constants.js","index.js"],"names":["initialStateSearch","searchField","initialStateRobots","robots","isPending","error","SearchBox","searchfield","searchChange","console","log","className","type","placeholder","value","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","info","this","setState","Component","Card","robot","name","email","src","alt","CardList","map","key","id","Header","App","onRequestRobots","document","title","process","onSearchChange","filteredRobots","filter","toLowerCase","includes","connect","searchRobots","requestRobots","dispatch","e","payload","target","fetch","then","res","json","data","catch","err","logger","createLogger","rootReducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.01d5b051.chunk.js","sourcesContent":["import {\r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED,\r\n} from './constants';\r\n\r\nconst initialStateSearch = {\r\n    searchField: ''\r\n};\r\n\r\nconst initialStateRobots = {\r\n    robots: [],\r\n    isPending: false,\r\n    error: ''\r\n};\r\n\r\nexport const searchRobots = (state=initialStateSearch,action={})=>{\r\n    switch(action.type)\r\n    {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return {\r\n                ...state,\r\n                searchField: action.payload\r\n            }       \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const requestRobots = (state=initialStateRobots,action={})=>{\r\n    switch(action.type)\r\n    {\r\n        case REQUEST_ROBOTS_PENDING:\r\n            return {\r\n                ...state,\r\n                isPending: true\r\n            };\r\n        case REQUEST_ROBOTS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                robots: action.payload,\r\n                isPending: false\r\n            };\r\n        case REQUEST_ROBOTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                isPending: false,\r\n\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield,searchChange})=> {\r\n    console.log('SearchBox');    \r\n    return (\r\n        <div className=\"pa2\">\r\n            <input type=\"search\" placeholder=\"Search robot\" className=\"pa3 ba b--green bg-lightest-blue\" value={searchfield} onChange={searchChange}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props)=> {\r\n    return (\r\n        <div style={{overflowY: 'scroll',border: '1px solid black',height: '800px'}}>\r\n        {\r\n            props.children\r\n        }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        };\r\n    }\r\n    componentDidCatch(error,info)\r\n    {\r\n        this.setState({hasError: true});\r\n    }\r\n    render()\r\n    {\r\n        if(this.state.hasError)\r\n        {\r\n            return <h2>Oooops that is not good!</h2>\r\n        }   \r\n        return this.props.children;\r\n    }\r\n};\r\n\r\nexport default ErrorBoundary;","import React from 'react';\r\n\r\nconst Card = ({robot:{name,email}})=> { \r\n    return (\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc\">\r\n            <img src={`https://robohash.org/${name}?200x200`} alt={`robot-${name}`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card.component';\r\n\r\nconst CardList = ({robots})=> {  \r\n    console.log('CardList');     \r\n    return (\r\n        <div>\r\n            {\r\n                robots.map(robot=>{\r\n                    return <Card key={robot.id} id={robot.id} robot={robot}/>\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { Component } from 'react';\r\n\r\nimport './Header.sass';\r\n\r\nclass Header extends Component {\r\n    // shouldComponentUpdate(nextProps,nextState)\r\n    // {\r\n    //     return false;\r\n    // }\r\n    render() {\r\n        console.log('Header');        \r\n        return (\r\n            <div className=\"header\">\r\n                <h1 className=\"f1\">RoboFreunden</h1>                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React,{Component} from 'react';\nimport './App.sass';\nimport 'tachyons';\n//Components\nimport SearchBox from '../components/SearchBox.component';\nimport Scroll from '../components/Scroll.component';\nimport ErrorBoundary from '../components/ErrorBoundary.component';\nimport CardList from '../components/CardList.component';\n\nimport {setSearchField,requestRobots} from '../actions';\nimport {connect} from 'react-redux';\nimport Header from '../components/Header';\n\nclass App extends Component {  \n  componentDidMount()\n  {\n    this.props.onRequestRobots();\n    document.title = process.env.REACT_APP_PAGE_TITLE_ONE;        \n  }  \n  render() {\n    const {searchField,onSearchChange, robots,isPending} = this.props;\n    const filteredRobots = robots.filter(robot=>{\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });    \n    if(isPending)\n    {\n      return (<h1>LOADING...</h1>);\n    }   \n    return (\n      <div className=\"tc\">\n          <Header />   \n          <SearchBox searchChange={onSearchChange}/>\n          <Scroll>\n            <ErrorBoundary>\n              <CardList robots={filteredRobots}/>\n            </ErrorBoundary>\n          </Scroll>          \n        </div>\n    );\n  }\n}\n \nconst mapStateToProps = (state)=>({\n  searchField: state.searchRobots.searchField,\n  robots: state.requestRobots.robots,\n  isPending: state.requestRobots.isPending,\n  error: state.requestRobots.error\n});\nconst mapDispatchToProps = (dispatch)=>({\n  onSearchChange: e=>dispatch(setSearchField(e.target.value)),\n  onRequestRobots: ()=> dispatch(requestRobots())\n});\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","import {\r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_ROBOTS_PENDING,\r\n    REQUEST_ROBOTS_SUCCESS,\r\n    REQUEST_ROBOTS_FAILED,\r\n} from './constants';\r\n\r\n\r\n\r\nexport const setSearchField = text => ({\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n});\r\nexport const requestRobots = ()=> dispatch =>{\r\n    dispatch({type: REQUEST_ROBOTS_PENDING});\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(res=>res.json())\r\n    .then(data => dispatch({type: REQUEST_ROBOTS_SUCCESS,payload: data}))\r\n    .catch(err => dispatch({type: REQUEST_ROBOTS_FAILED, payload: err}));\r\n};","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport { requestRobots, searchRobots } from './reducers'\nimport App from './containers/App';\n\nconst logger = createLogger();\nconst rootReducers = combineReducers({requestRobots, searchRobots});\nconst store = createStore(rootReducers, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n<Provider store={store}>\n    <App/>\n</Provider>\n,document.getElementById('root'));\n\n"],"sourceRoot":""}